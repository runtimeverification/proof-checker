name: 'Check'
on:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integration-tests:
    name: 'Tests'
    runs-on: [self-hosted, linux, normal]
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
            submodules: recursive
      - name: 'Build Docker image'
        run: |
          COMMIT=$(git rev-parse --short=7 HEAD)
          K_VERSION=$(cat deps/k_release)
          docker build .                        \
            --file .github/workflows/Dockerfile \
            --tag runtimeverificationinc/proof-checker-ci:${COMMIT} \
            --build-arg K_VERSION=${K_VERSION}

          docker run                   \
            --name proof-checker-ci \
            --rm                       \
            --interactive              \
            --tty                      \
            --detach                   \
            runtimeverificationinc/proof-checker-ci:${COMMIT}
          docker cp ./. proof-checker-ci:/home/user/workspace
          docker exec --user root proof-checker-ci chown -R user:user /home/user
      - name: 'Set Python version'
        run: |
            docker exec --workdir /home/user/workspace/generation proof-checker-ci poetry env use 3.10
      - name: 'Run code quality checks'
        run: docker exec proof-checker-ci make -j8 check
      - name: 'Run unit tests'
        run: docker exec proof-checker-ci make -j8 test-unit
      - name: 'Run system tests'
        run: docker exec proof-checker-ci make -j8 test-system
      - name: 'Run ZK tests'
        run: docker exec proof-checker-ci make -j8 test-zk
      - name: 'Tear down Docker container'
        if: always()
        run: |
          docker stop --time=0 proof-checker-ci

  lurk-tests:
    name: 'Lurk Tests'
    runs-on: [self-hosted, linux, normal]
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
            submodules: recursive
      - name: 'Build Docker image'
        run: |
          COMMIT=$(git rev-parse --short=7 HEAD)
          K_VERSION=$(cat deps/k_release)
          docker build .                        \
            --file .github/workflows/Dockerfile \
            --tag runtimeverificationinc/proof-checker-ci:${COMMIT} \
            --build-arg K_VERSION=${K_VERSION}

          docker run                   \
            --name proof-checker-ci    \
            --rm                       \
            --interactive              \
            --tty                      \
            --detach                   \
            runtimeverificationinc/proof-checker-ci:${COMMIT}
          docker cp ./. proof-checker-ci:/home/user/workspace/proof-checker
          docker exec --user root proof-checker-ci chown -R user:user /home/user
      - name: 'Install Lurk'
        run: |
          docker exec --user root proof-checker-ci git clone https://github.com/lurk-lab/lurk-rs.git
          docker exec --user root proof-checker-ci /bin/bash -c 'cd lurk-rs && git submodule update --init --recursive'
          docker exec --user root proof-checker-ci /bin/bash -c 'cd lurk-rs && cargo install --path .'
      - name: 'Run Lurk tests'
        run: |
          docker exec --user root proof-checker-ci /bin/bash -c 'export PATH="/root/.cargo/bin/:$PATH" && cd proof-checker/lurk && lurk csl-examples/transfer.lurk'
          docker exec --user root proof-checker-ci /bin/bash -c 'export PATH="/root/.cargo/bin/:$PATH" && cd proof-checker/lurk && lurk csl-examples/perceptron.lurk'
          docker exec --user root proof-checker-ci /bin/bash -c 'export PATH="/root/.cargo/bin/:$PATH" && cd proof-checker/lurk && lurk csl-examples/svm5.lurk'
          docker exec --user root proof-checker-ci /bin/bash -c 'export PATH="/root/.cargo/bin/:$PATH" && cd proof-checker/lurk && lurk --rc 100 test_transfer_task_specific.lurk'
          docker exec --user root proof-checker-ci /bin/bash -c 'export PATH="/root/.cargo/bin/:$PATH" && cd proof-checker/lurk && lurk --rc 100 test_impreflex_compressed_goal.lurk'

      - name: 'Tear down Docker container'
        if: always()
        run: |
          docker stop --time=0 proof-checker-ci
