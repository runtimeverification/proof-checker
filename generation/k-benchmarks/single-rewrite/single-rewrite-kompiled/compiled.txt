module ARRAY-SYNTAX [digest(��-U��Q�Ťx�k��*V7��Ԍ]yy�-), org.kframework.attributes.Location(Location(73,1,136,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports LIST
  syntax KItem ::= Array "[" Int "]" [function, hook(ARRAY.lookup)]
  syntax KItem ::= Array
  syntax K
  syntax Bool ::= Int "in_keys" "(" Array ")" [function, hook(ARRAY.in_keys), total]
  syntax Bool ::= "isArray" "(" K ")" [function, predicate(Array), total]
  syntax Array [element(_[_<-_]), hook(ARRAY.Array), org.kframework.attributes.Location(Location(76,3,76,70)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), unit(arrayCtor)]
  syntax Array ::= Array "[" Int "<-" KItem "]" [function, hook(ARRAY.update), klabel(_[_<-_]), symbol]
  syntax Array ::= Array "[" Int "<-" "undef" "]" [function, hook(ARRAY.remove)]
  syntax Array ::= "updateArray" "(" Array "," Int "," List ")" [function, hook(ARRAY.updateAll), klabel(updateArray)]
  syntax Array ::= "project:Array" "(" K ")" [function, projection]
  syntax Array ::= "fillArray" "(" Array "," Int "," Int "," KItem ")" [function, hook(ARRAY.fill), klabel(fillArray)]
  rule `project:Array`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module AUTO-CASTS [digest(��u�L�~H�_`�t���+yYe�l0e�I�<�9), org.kframework.attributes.Location(Location(385,1,393,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
endmodule


module AUTO-FOLLOW [digest(�\%\A圚د��L/����2�	��t��-�), org.kframework.attributes.Location(Location(395,1,406,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
endmodule


module BASIC-K [digest(�cᷧ�ȸ8�l�����=ʡK82r���j), org.kframework.attributes.Location(Location(35,1,42,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-BOOL
  imports ML-SYNTAX
  syntax KItem [hook(K.KItem), org.kframework.attributes.Location(Location(38,3,38,31)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax KItem ::= KConfigVar
  syntax KConfigVar [org.kframework.attributes.Location(Location(40,3,40,28)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md)), token]
  syntax K ::= KItem
  syntax K
  syntax Bool ::= "isKConfigVar" "(" K ")" [function, predicate(KConfigVar), total]
endmodule


module BOOL [digest(E� LVe��D�qV�D�L,��:��:n
�	3)�^�), org.kframework.attributes.Location(Location(977,1,980,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports BOOL-COMMON
endmodule


module BOOL-COMMON [digest(nw��7*���=�0W������d�=��ۃ<"), org.kframework.attributes.Location(Location(887,1,961,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports BOOL-SYNTAX
  imports BASIC-K
  syntax priority notBool_ > _orElseBool_ _orBool_ _andThenBool_ _impliesBool_ _andBool_ _xorBool_ > _==Bool_ _=/=Bool_
  syntax associativity left _xorBool_
  syntax associativity left _orElseBool_
  syntax associativity left _orBool_
  syntax associativity left _impliesBool_
  syntax associativity left _andThenBool_
  syntax associativity left _andBool_
  syntax associativity left _==Bool_ _=/=Bool_
  syntax associativity left _==Bool_
  syntax associativity left _=/=Bool_
  syntax Bool ::= Bool "xorBool" Bool [boolOperation, function, hook(BOOL.xor), klabel(_xorBool_), left, smt-hook(xor), symbol, total]
  syntax Bool ::= Bool "orElseBool" Bool [boolOperation, function, hook(BOOL.orElse), klabel(_orElseBool_), left, smt-hook(or), symbol, total]
  syntax Bool ::= Bool "orBool" Bool [boolOperation, function, hook(BOOL.or), klabel(_orBool_), latex({#1}\vee_{\scriptstyle\it Bool}{#2}), left, smt-hook(or), symbol, total]
  syntax Bool ::= Bool "impliesBool" Bool [boolOperation, function, hook(BOOL.implies), klabel(_impliesBool_), left, smt-hook(=>), symbol, total]
  syntax Bool ::= Bool "andThenBool" Bool [boolOperation, function, hook(BOOL.andThen), klabel(_andThenBool_), left, smt-hook(and), symbol, total]
  syntax Bool ::= Bool "andBool" Bool [boolOperation, function, hook(BOOL.and), klabel(_andBool_), latex({#1}\wedge_{\scriptstyle\it Bool}{#2}), left, smt-hook(and), symbol, total]
  syntax Bool ::= Bool "==Bool" Bool [function, hook(BOOL.eq), klabel(_==Bool_), left, smt-hook(=), symbol, total]
  syntax Bool ::= Bool "=/=Bool" Bool [function, hook(BOOL.ne), klabel(_=/=Bool_), left, smt-hook(distinct), symbol, total]
  syntax Bool ::= "notBool" Bool [boolOperation, function, hook(BOOL.not), klabel(notBool_), latex(\neg_{\scriptstyle\it Bool}{#1}), smt-hook(not), symbol, total]
  rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(928,8,928,29)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(929,8,929,29)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(943,8,943,38)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(942,8,942,38)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(941,8,941,38)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(951,8,951,33)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(953,8,953,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(950,8,950,33)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(952,8,952,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(946,8,946,34)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(948,8,948,32)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(945,8,945,34)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(947,8,947,32)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(957,8,957,39)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(958,8,958,45)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(955,8,955,36)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(956,8,956,40)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(_Gen0,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(939,8,939,36)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(937,8,937,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(936,8,936,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#token("false","Bool"),_Gen0)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(938,8,938,36)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(_Gen0,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(934,8,934,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(932,8,932,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(931,8,931,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#token("false","Bool"),_Gen0)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(933,8,933,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(960,8,960,57)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module BOOL-SYNTAX [digest(7%�ݑ6�)�=z�¥RA��	�Y��a�"��I� ), org.kframework.attributes.Location(Location(881,1,885,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports SORT-BOOL
  syntax K
  syntax Bool ::= "true" [token]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "false" [token]
endmodule


module BUILTIN-ID-TOKENS [digest(��Gތ��)��9��ڵE���rr�}�ƒIE), org.kframework.attributes.Location(Location(63,1,66,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax KItem ::= Bool
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  syntax Bool ::= "is#UpperId" "(" K ")" [function, predicate(#UpperId), total]
  syntax Bool ::= "is#LowerId" "(" K ")" [function, predicate(#LowerId), total]
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*" [prec(2), token]
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*" [prec(2), token]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module BYTES-CONCRETE [concrete, digest(�F:�c;lNx � :Ē.GL�J����), org.kframework.attributes.Location(Location(2075,1,2077,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports BYTES-HOOKED
endmodule


module BYTES-HOOKED [digest(�+��~cь�;nLl�v�e��X��?��`��$), org.kframework.attributes.Location(Location(1822,1,1982,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports STRING-SYNTAX
  imports BYTES-SYNTAX
  syntax associativity right _+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes
  syntax String ::= "Bytes2String" "(" Bytes ")" [function, hook(BYTES.bytes2string), klabel(Bytes2String), total]
  syntax Signedness ::= "project:Signedness" "(" K ")" [function, projection]
  syntax Signedness ::= "Unsigned" [klabel(unsignedBytes), symbol]
  syntax Signedness ::= "Signed" [klabel(signedBytes), symbol]
  syntax KItem ::= Signedness
  syntax KItem ::= Int
  syntax KItem ::= Endianness
  syntax K
  syntax Int ::= Bytes "[" Int "]" [function, hook(BYTES.get)]
  syntax Int ::= "project:Int" "(" K ")" [function, projection]
  syntax Int ::= "lengthBytes" "(" Bytes ")" [function, hook(BYTES.length), klabel(lengthBytes), smtlib(lengthBytes), total]
  syntax Int ::= "Bytes2Int" "(" Bytes "," Endianness "," Signedness ")" [function, hook(BYTES.bytes2int), klabel(Bytes2Int), total]
  syntax Endianness ::= "project:Endianness" "(" K ")" [function, projection]
  syntax Endianness ::= "LE" [klabel(littleEndianBytes), symbol]
  syntax Endianness ::= "BE" [klabel(bigEndianBytes), symbol]
  syntax Bytes ::= Bytes "[" Int "<-" Int "]" [function, hook(BYTES.update)]
  syntax Bytes ::= Bytes "+Bytes" Bytes [function, hook(BYTES.concat), right, total]
  syntax Bytes ::= "substrBytes" "(" Bytes "," Int "," Int ")" [function, hook(BYTES.substr), klabel(substrBytes)]
  syntax Bytes ::= "reverseBytes" "(" Bytes ")" [function, hook(BYTES.reverse), klabel(reverseBytes), total]
  syntax Bytes ::= "replaceAtBytes" "(" Bytes "," Int "," Bytes ")" [function, hook(BYTES.replaceAt), klabel(replaceAtBytes)]
  syntax Bytes ::= "padRightBytes" "(" Bytes "," Int "," Int ")" [function, hook(BYTES.padRight), klabel(padRightBytes)]
  syntax Bytes ::= "padLeftBytes" "(" Bytes "," Int "," Int ")" [function, hook(BYTES.padLeft), klabel(padLeftBytes)]
  syntax Bytes ::= "String2Bytes" "(" String ")" [function, hook(BYTES.string2bytes), klabel(String2Bytes), total]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Int "," Endianness ")" [function, hook(BYTES.int2bytes), klabel(Int2Bytes), total]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Endianness "," Signedness ")" [function, klabel(Int2BytesNoLen), total]
  syntax Bytes ::= ".Bytes" [function, hook(BYTES.empty), total]
  syntax Bool ::= "isSignedness" "(" K ")" [function, predicate(Signedness), total]
  syntax Bool ::= "isInt" "(" K ")" [function, predicate(Int), total]
  syntax Bool ::= "isEndianness" "(" K ")" [function, predicate(Endianness), total]
  rule `project:Signedness`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Int`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Endianness`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module BYTES-SYNTAX [digest(Y�Jh�RӰ��C��He�G�1b�!|��'c��), org.kframework.attributes.Location(Location(1799,1,1804,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports STRING-SYNTAX
  syntax KItem ::= Bytes
  syntax K
  syntax Bytes [hook(BYTES.Bytes), org.kframework.attributes.Location(Location(1802,3,1802,35)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax Bytes ::= r"b[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token]
  syntax Bytes ::= "project:Bytes" "(" K ")" [function, projection]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBytes" "(" K ")" [function, predicate(Bytes), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:Bytes`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module CONFIG-CELLS [digest(2�&%��GB/V�<&�ڢ��F���/d�ze�), org.kframework.attributes.Location(Location(311,1,324,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports RULE-LISTS
  imports KCELLS
  syntax K
  syntax Cell ::= "<" #CellName #CellProperties ">" K "</" #CellName ">" [klabel(#configCell), symbol]
  syntax Cell ::= "<" #CellName "/>" [klabel(#externalCell), symbol]
  syntax Bool ::= "is#CellProperty" "(" K ")" [function, predicate(#CellProperty), total]
  syntax Bool ::= "is#CellProperties" "(" K ")" [function, predicate(#CellProperties), total]
  syntax Bool ::= "is#CellName" "(" K ")" [function, predicate(#CellName), total]
  syntax #CellProperty ::= #CellName "=" KString [klabel(#cellProperty), symbol]
  syntax #CellProperties ::= #CellProperty #CellProperties [klabel(#cellPropertyList), symbol]
  syntax #CellProperties ::= "" [klabel(#cellPropertyListTerminator), symbol]
  syntax #CellName ::= r"[a-zA-Z][a-zA-Z0-9\\-]*" [prec(1), token]
  syntax #CellName ::= #UpperId [token]
  syntax #CellName ::= #LowerId [token]
endmodule


module DEFAULT-CONFIGURATION [digest(���||�y������������^@/Q�
�j�), org.kframework.attributes.Location(Location(532,1,536,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports MAP
  imports BASIC-K
  syntax KItem ::= KCell
  syntax KCell ::= "project:KCell" "(" K ")" [function, projection]
  syntax KCell ::= "initKCell" "(" Map ")" [function, initializer, noThread]
  syntax KCell ::= "<k>" K "</k>" [cell, cellName(k), format(%1%i%n%2%d%n%3), maincell, org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  syntax K
  syntax Bool ::= "isKCell" "(" K ")" [function, predicate(KCell), total]
  rule initKCell(Init)=>`<k>`(`project:KItem`(`Map:lookup`(Init,#token("$PGM","KConfigVar")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(888ac40929773fd17d5b9fd1e9d0be94791665a663f07907d894c31dccc871a5), initializer]
  rule `project:KCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module DEFAULT-LAYOUT [digest(A�V�������wD�'�҆�2�T!t�RP��n), org.kframework.attributes.Location(Location(518,1,522,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax KItem ::= Bool
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  syntax Bool ::= "is#Layout" "(" K ")" [function, predicate(#Layout), total]
  syntax #Layout ::= r"(\\/\\/[^\\n\\r]*)"
  syntax #Layout ::= r"(\\/\\*([^\\*]|(\\*+([^\\*\\/])))*\\*+\\/)"
  syntax #Layout ::= r"([\\ \\n\\r\\t])"
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module DOMAINS-SYNTAX [digest(g�?c)�0����h?¡3[s-��WxYZb��), org.kframework.attributes.Location(Location(39,1,45,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports UNSIGNED-INT-SYNTAX
  imports STRING-SYNTAX
  imports SORT-K
  imports ID-SYNTAX
  imports BOOL-SYNTAX
endmodule


module FLOAT-SYNTAX [digest(w�[�&!����һa��#g�-��)=�	��), org.kframework.attributes.Location(Location(1290,1,1295,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax KItem ::= Float
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Float [hook(FLOAT.Float), org.kframework.attributes.Location(Location(1291,3,1291,35)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3), token]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3), token]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?[0-9]+)?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(1), token]
  syntax Float ::= "project:Float" "(" K ")" [function, projection]
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isFloat" "(" K ")" [function, predicate(Float), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Float`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module ID-SYNTAX [digest(�$u�m@,/�q��Y�9��"�H0`jt�zB), org.kframework.attributes.Location(Location(2134,1,2136,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax KItem ::= Id
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Id [org.kframework.attributes.Location(Location(2135,3,2135,20)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), token]
  syntax Id ::= "project:Id" "(" K ")" [function, projection]
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isId" "(" K ")" [function, predicate(Id), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Id`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module ID-SYNTAX-PROGRAM-PARSING [digest(a��~����l�ز��bF�;�=�q��=��), org.kframework.attributes.Location(Location(2127,1,2132,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports BUILTIN-ID-TOKENS
  syntax KItem ::= Id
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K
  syntax Id ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*" [prec(1), token]
  syntax Id ::= #UpperId [token]
  syntax Id ::= #LowerId [token]
  syntax Id ::= "project:Id" "(" K ")" [function, projection]
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isId" "(" K ")" [function, predicate(Id), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Id`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module INT [digest(�i�<E�@�M�5
]mʔ���ō�
���), org.kframework.attributes.Location(Location(1227,1,1255,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports K-EQUAL
  imports INT-COMMON
  imports BOOL
  syntax Int ::= "freshInt" "(" Int ")" [freshGenerator, function, klabel(freshInt), private, total]
  rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1237,8,1237,164)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1248,8,1248,57)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1247,8,1247,57)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1254,8,1254,28)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1235,8,1235,85)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1242,5,1245,23)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1251,8,1251,58)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1239,8,1240,23)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1250,8,1250,53)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module INT-COMMON [digest(���L�Ѫ�$#X�l8)�~+໎�{�D��[�), org.kframework.attributes.Location(Location(1008,1,1151,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports INT-SYNTAX
  imports BOOL
  syntax priority ~Int_ > _^Int_ _^%Int__ > _divInt_ _%Int_ _/Int_ _*Int_ _modInt_ > _+Int_ _-Int_ > _>>Int_ _<<Int_ > _&Int_ > _xorInt_ > _|Int_
  syntax associativity left _|Int_
  syntax associativity left _xorInt_
  syntax associativity left _modInt_
  syntax associativity left _divInt_ _%Int_ _/Int_ _*Int_ _modInt_
  syntax associativity left _divInt_
  syntax associativity left _^Int_ _^%Int__
  syntax associativity left _^Int_
  syntax associativity left _^%Int__
  syntax associativity left _>Int_
  syntax associativity left _>>Int_ _<<Int_
  syntax associativity left _>>Int_
  syntax associativity left _>=Int_
  syntax associativity left _==Int_
  syntax associativity left _=/=Int_
  syntax associativity left _<Int_
  syntax associativity left _<=Int_
  syntax associativity left _<<Int_
  syntax associativity left _/Int_
  syntax associativity left _-Int_
  syntax associativity left _+Int_ _-Int_
  syntax associativity left _+Int_
  syntax associativity left _*Int_
  syntax associativity left _&Int_
  syntax associativity left _%Int_
  syntax K ::= "srandInt" "(" Int ")" [function, hook(INT.srand), impure, klabel(srandInt)]
  syntax Int ::= Int "|Int" Int [comm, function, hook(INT.or), klabel(_|Int_), latex({#1}\mathrel{|_{\scriptstyle\it Int}}{#2}), left, smtlib(orInt), symbol, total]
  syntax Int ::= Int "xorInt" Int [comm, function, hook(INT.xor), klabel(_xorInt_), latex({#1}\mathrel{\oplus_{\scriptstyle\it Int}}{#2}), left, smtlib(xorInt), symbol, total]
  syntax Int ::= Int "modInt" Int [function, hook(INT.emod), klabel(_modInt_), left, smt-hook(mod), symbol]
  syntax Int ::= Int "divInt" Int [function, hook(INT.ediv), klabel(_divInt_), left, smt-hook(div), symbol]
  syntax Int ::= Int "^Int" Int [function, hook(INT.pow), klabel(_^Int_), latex({#1}\mathrel{{\char`\^}_{\!\scriptstyle\it Int}}{#2}), left, smt-hook(^), symbol]
  syntax Int ::= Int "^%Int" Int Int [function, hook(INT.powmod), klabel(_^%Int__), left, smt-hook((mod (^ #1 #2) #3)), symbol]
  syntax Int ::= Int ">>Int" Int [function, hook(INT.shr), klabel(_>>Int_), latex({#1}\mathrel{\gg_{\scriptstyle\it Int}}{#2}), left, smtlib(shrInt), symbol]
  syntax Int ::= Int "<<Int" Int [function, hook(INT.shl), klabel(_<<Int_), latex({#1}\mathrel{\ll_{\scriptstyle\it Int}}{#2}), left, smtlib(shlInt), symbol]
  syntax Int ::= Int "/Int" Int [function, hook(INT.tdiv), klabel(_/Int_), latex({#1}\mathrel{\div_{\scriptstyle\it Int}}{#2}), left, smt-hook(div), symbol]
  syntax Int ::= Int "-Int" Int [function, hook(INT.sub), klabel(_-Int_), latex({#1}\mathrel{-_{\scriptstyle\it Int}}{#2}), left, smt-hook(-), symbol, total]
  syntax Int ::= Int "+Int" Int [comm, function, hook(INT.add), klabel(_+Int_), latex({#1}\mathrel{+_{\scriptstyle\it Int}}{#2}), left, smt-hook(+), symbol, total]
  syntax Int ::= Int "*Int" Int [comm, function, hook(INT.mul), klabel(_*Int_), latex({#1}\mathrel{\ast_{\scriptstyle\it Int}}{#2}), left, smt-hook(*), symbol, total]
  syntax Int ::= Int "&Int" Int [comm, function, hook(INT.and), klabel(_&Int_), latex({#1}\mathrel{\&_{\scriptstyle\it Int}}{#2}), left, smtlib(andInt), symbol, total]
  syntax Int ::= Int "%Int" Int [function, hook(INT.tmod), klabel(_%Int_), latex({#1}\mathrel{\%_{\scriptstyle\it Int}}{#2}), left, smt-hook(mod), symbol]
  syntax Int ::= "~Int" Int [function, hook(INT.not), klabel(~Int_), latex(\mathop{\sim_{\scriptstyle\it Int}}{#1}), smtlib(notInt), symbol, total]
  syntax Int ::= "signExtendBitRangeInt" "(" Int "," Int "," Int ")" [function, hook(INT.signExtendBitRange), klabel(signExtendBitRangeInt)]
  syntax Int ::= "randInt" "(" Int ")" [function, hook(INT.rand), impure, klabel(randInt)]
  syntax Int ::= "minInt" "(" Int "," Int ")" [function, hook(INT.min), smt-hook((ite (< #1 #2) #1 #2)), total]
  syntax Int ::= "maxInt" "(" Int "," Int ")" [function, hook(INT.max), smt-hook((ite (< #1 #2) #2 #1)), total]
  syntax Int ::= "log2Int" "(" Int ")" [function, hook(INT.log2), klabel(log2Int)]
  syntax Int ::= "bitRangeInt" "(" Int "," Int "," Int ")" [function, hook(INT.bitRange), klabel(bitRangeInt)]
  syntax Int ::= "absInt" "(" Int ")" [function, hook(INT.abs), klabel(absInt), smt-hook((ite (< #1 0) (- 0 #1) #1)), total]
  syntax Bool ::= Int "dividesInt" Int [function]
  syntax Bool ::= Int ">Int" Int [function, hook(INT.gt), klabel(_>Int_), latex({#1}\mathrel{>_{\scriptstyle\it Int}}{#2}), left, smt-hook(>), symbol, total]
  syntax Bool ::= Int ">=Int" Int [function, hook(INT.ge), klabel(_>=Int_), latex({#1}\mathrel{\geq_{\scriptstyle\it Int}}{#2}), left, smt-hook(>=), symbol, total]
  syntax Bool ::= Int "==Int" Int [function, hook(INT.eq), klabel(_==Int_), latex({#1}\mathrel{{=}{=}_{\scriptstyle\it Int}}{#2}), left, smt-hook(=), symbol, total]
  syntax Bool ::= Int "=/=Int" Int [function, hook(INT.ne), klabel(_=/=Int_), latex({#1}\mathrel{{=}{/}{=}_{\scriptstyle\it Int}}{#2}), left, smt-hook(distinct), symbol, total]
  syntax Bool ::= Int "<Int" Int [function, hook(INT.lt), klabel(_<Int_), latex({#1}\mathrel{<_{\scriptstyle\it Int}}{#2}), left, smt-hook(<), symbol, total]
  syntax Bool ::= Int "<=Int" Int [function, hook(INT.le), klabel(_<=Int_), latex({#1}\mathrel{\leq_{\scriptstyle\it Int}}{#2}), left, smt-hook(<=), symbol, total]
endmodule


module INT-SYNTAX [digest([x\��'�m��*���'���V��q���b	F�), org.kframework.attributes.Location(Location(1003,1,1006,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports UNSIGNED-INT-SYNTAX
  syntax K
  syntax Int ::= r"[\\+-]?[0-9]+" [prec(2), prefer, token]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
endmodule


module K [digest(�m$1��db0S��M���MH��n*F�/), org.kframework.attributes.Location(Location(459,1,489,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-PREDICATES
  imports REQUIRES-ENSURES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports KREWRITE
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
  syntax {Sort} Sort ::= Sort "#as" Sort [klabel(#KAs), symbol]
  syntax {Sort} Sort ::= "#fun" "(" Sort ")" "(" Sort ")" [klabel(#fun2), prefer, symbol]
  syntax {Sort1, Sort2} Sort1 ::= "#let" Sort2 "=" Sort2 "#in" Sort1 [klabel(#let), symbol]
  syntax {Sort1, Sort2} Sort1 ::= "#fun" "(" Sort2 "=>" Sort1 ")" "(" Sort2 ")" [klabel(#fun3), symbol]
  syntax associativity left _:=K_ _:/=K_
  syntax Bool ::= K ":=K" K [equalEqualK, function, klabel(_:=K_), symbol, total]
  syntax Bool ::= K ":/=K" K [function, klabel(_:/=K_), notEqualEqualK, symbol, total]
endmodule


module K-AMBIGUITIES [digest(������	)��M�C�|f�A7��<d_��3), org.kframework.attributes.Location(Location(554,1,558,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax {Sort} Sort ::= "amb" "(" Sort "," Sort ")" [klabel(amb), symbol]
endmodule


module K-BOTTOM-SORT [digest(�=�� �po�Ff�V|����t��m4��F�), org.kframework.attributes.Location(Location(374,1,378,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-KBOTT
  syntax {Sort} Sort ::= KBott
  syntax KItem ::= KBott
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module K-EQUAL [digest(B�Y���T��W�t5*���|SA�u?���), org.kframework.attributes.Location(Location(2214,1,2225,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports K-EQUAL-SYNTAX
  imports BOOL
  rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2220,8,2220,45)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2223,8,2223,67)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2222,8,2222,59)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module K-EQUAL-SYNTAX [digest(*K	k�0��9�������|�8�#2�s�A)���), org.kframework.attributes.Location(Location(2176,1,2188,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports BOOL
  imports BASIC-K
  syntax {Sort} Sort ::= "#if" Bool "#then" Sort "#else" Sort "#fi" [function, hook(KEQUAL.ite), smt-hook(ite), total]
  syntax priority _:=K_ _=/=K_ _:/=K_ _==K_ > weakAlwaysFinally #And _orElseBool_ weakExistsFinally _orBool_ #Implies _andThenBool_ _impliesBool_ #Floor #Exists #Ceil _andBool_ #Forall #Not #Or notBool_ #AG #Equals _xorBool_
  syntax associativity left _=/=K_ _==K_
  syntax Bool ::= K "==K" K [equalEqualK, function, hook(KEQUAL.eq), klabel(_==K_), latex({#1}\mathrel{=_K}{#2}), smt-hook(=), symbol, total]
  syntax Bool ::= K "=/=K" K [function, hook(KEQUAL.ne), klabel(_=/=K_), latex({#1}\mathrel{\neq_K}{#2}), notEqualEqualK, smt-hook(distinct), symbol, total]
endmodule


module K-LOCATIONS [digest(��yb"f��O�MVA�z!�(�.�.-yJ�X�mH), org.kframework.attributes.Location(Location(571,1,578,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports STRING-SYNTAX
  imports INT-SYNTAX
  syntax {Sort} Sort ::= "#location" "(" Sort "," String "," Int "," Int "," Int "," Int ")" [format(%3), klabel(#location), symbol]
endmodule


module K-REFLECTION [digest(b=�:�"oq��_� h�b����H<�=*��), org.kframework.attributes.Location(Location(2246,1,2269,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports STRING
  imports BASIC-K
  syntax {Sort} String ::= "#unparseKORE" "(" Sort ")" [function, hook(KREFLECTION.printKORE), klabel(#unparseKORE)]
  syntax {Sort} Sort ::= "#parseKORE" "(" String ")" [function, hook(KREFLECTION.parseKORE), klabel(#parseKORE)]
  syntax String ::= "#sort" "(" K ")" [function, hook(KREFLECTION.sort), klabel(#sort)]
  syntax String ::= "#kompiledDirectory" "(" ")" [function, hook(KREFLECTION.kompiledDir), klabel(#kompiledDirectory)]
  syntax List ::= "project:List" "(" K ")" [function, projection]
  syntax List ::= "#argv" "(" ")" [function, hook(KREFLECTION.argv), klabel(#argv)]
  syntax KItem ::= List
  syntax KItem ::= IOError
  syntax KItem ::= "getKLabel" "(" K ")" [function, hook(KREFLECTION.getKLabel), klabel(getKLabel)]
  syntax KItem ::= "#fresh" "(" String ")" [function, hook(KREFLECTION.fresh), impure, klabel(#fresh)]
  syntax K ::= "#getenv" "(" String ")" [function, hook(KREFLECTION.getenv), impure, klabel(#getenv)]
  syntax K ::= "#configuration" [function, hook(KREFLECTION.configuration), impure]
  syntax K
  syntax IOError ::= "project:IOError" "(" K ")" [function, projection]
  syntax IOError ::= "#noParse" "(" String ")" [klabel(#noParse), symbol]
  syntax Bool ::= "isList" "(" K ")" [function, predicate(List), total]
  syntax Bool ::= "isIOError" "(" K ")" [function, predicate(IOError), total]
  rule `project:List`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:IOError`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module K-SORT-LATTICE [digest(��ʳF-nMm�i_�nTY�ԯ��s���B��:�), org.kframework.attributes.Location(Location(380,1,383,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports K-TOP-SORT
  imports K-BOTTOM-SORT
endmodule


module K-TERM [digest(d��*01�M�Ng��M��ʮB�"�3̉p�), org.kframework.attributes.Location(Location(492,1,500,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-PREDICATES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports KREWRITE
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K-TOP-SORT [digest(�O#;��W+�qp�@�wجd�i��� PM�), org.kframework.attributes.Location(Location(368,1,372,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-KBOTT
  syntax {Sort} KItem ::= Sort
  syntax KItem ::= KBott
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module KAST [digest(i@�j�Ļ b}R�@m��	#���>?����F�Q), org.kframework.attributes.Location(Location(73,1,93,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-KBOTT
  imports KSTRING
  imports BUILTIN-ID-TOKENS
  imports BASIC-K
  syntax associativity left #KList
  syntax KList ::= KList "," KList [assoc, klabel(#KList), left, prefer, symbol, unit(#EmptyKList)]
  syntax KList ::= K
  syntax KList ::= ".KList" [klabel(#EmptyKList), symbol]
  syntax KList ::= ".::KList" [klabel(#EmptyKList), symbol]
  syntax KLabel ::= r"`(\\\\`|\\\\\\\\|[^`\\\\\\n\\r])+`" [token]
  syntax KLabel ::= r"(?<![a-zA-Z0-9])[#a-z][a-zA-Z0-9]*" [prec(1), token]
  syntax KLabel ::= #LowerId [token]
  syntax KItem ::= KBott
  syntax KBott ::= KLabel "(" KList ")" [klabel(#KApply), symbol]
  syntax KBott ::= "#token" "(" KString "," KString ")" [klabel(#KToken), symbol]
  syntax KBott ::= "#klabel" "(" KLabel ")" [klabel(#WrappedKLabel), symbol]
  syntax K
  syntax Bool ::= "isKList" "(" K ")" [function, predicate(KList), total]
  syntax Bool ::= "isKLabel" "(" K ")" [function, predicate(KLabel), total]
endmodule


module KCELLS [digest(��G��֑����o�1﫰�-r�T�i�:), org.kframework.attributes.Location(Location(241,1,254,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports KAST
  syntax associativity non-assoc #withConfig [org.kframework.attributes.Location(Location(252,3,252,31)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax associativity left #cells
  syntax KItem ::= Cell
  syntax KItem ::= Bag
  syntax K
  syntax Cell [org.kframework.attributes.Location(Location(244,3,244,14)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax Cell ::= "project:Cell" "(" K ")" [function, projection]
  syntax Bool ::= "isCell" "(" K ")" [function, predicate(Cell), total]
  syntax Bool ::= "isBag" "(" K ")" [function, predicate(Bag), total]
  syntax Bool ::= "is#RuleBody" "(" K ")" [function, predicate(#RuleBody), total]
  syntax Bag ::= KBott
  syntax Bag ::= Cell
  syntax Bag ::= Bag Bag [assoc, klabel(#cells), left, symbol, unit(#cells)]
  syntax Bag ::= "project:Bag" "(" K ")" [function, projection]
  syntax Bag ::= ".Bag" [klabel(#cells), symbol]
  syntax Bag ::= ".::Bag" [klabel(#cells), symbol]
  syntax Bag ::= "(" Bag ")" [bracket, bracketLabel((_)_KCELLS_Bag_Bag)]
  syntax #RuleBody ::= "[" "[" K "]" "]" Bag [avoid, klabel(#withConfig), symbol]
  rule `project:Cell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bag`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module KREWRITE [digest(�������|S5�I5��FXSZ�!�i>S�), org.kframework.attributes.Location(Location(452,1,456,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax {Sort} Sort ::= Sort "=>" Sort [klabel(#KRewrite), symbol]
  syntax priority #KRewrite > #withConfig
  syntax associativity non-assoc #KRewrite [org.kframework.attributes.Location(Location(454,3,454,29)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
endmodule


module KSEQ [digest(�K���;���}��۪*p��Ҷ���W9?), org.kframework.attributes.Location(Location(97,1,106,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports KAST
  imports K-TOP-SORT
  syntax {Sort} Sort ::= "(" Sort ")" [applyPriority(1), bracket, bracketLabel((_)_KSEQ_Sort_Sort{Sort}), defaultBracket]
  syntax associativity left #KSequence [org.kframework.attributes.Location(Location(104,3,104,25)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax associativity left #KSequence
  syntax K ::= K "~>" K [assoc, klabel(#KSequence), left, symbol, unit(#EmptyK)]
  syntax K ::= ".K" [klabel(#EmptyK), symbol, unparseAvoid]
  syntax K ::= ".::K" [klabel(#EmptyK), symbol, unparseAvoid]
  syntax K ::= "." [klabel(#EmptyK), symbol]
endmodule


module KSEQ-SYMBOLIC [digest(p/%�͍]�X.xz|	b������쀓w3:W), org.kframework.attributes.Location(Location(206,1,217,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports ML-SYNTAX
  imports KVARIABLE-SYNTAX
  imports KSEQ
  syntax KLabel ::= #KVariable
  syntax KConfigVar ::= r"(?<![A-Za-z0-9_\\$!\\?@])(\\$)([A-Z][A-Za-z0-9'_]*)" [token]
  syntax KBott ::= KConfigVar
  syntax KBott ::= #KVariable
  syntax #KVariable ::= r"(?<![A-Za-z0-9_\\$!\\?@])(\\!|\\?|@)?([A-Z][A-Za-z0-9'_]*|_|_[A-Z][A-Za-z0-9'_]*)" [prec(1), token]
  syntax #KVariable ::= #UpperId [token]
endmodule


module KSTRING [digest(	�L�E������S���r�&�w1��f^]�), org.kframework.attributes.Location(Location(58,1,61,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token]
  syntax KItem ::= Bool
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isKString" "(" K ")" [function, predicate(KString), total]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module KVARIABLE-SYNTAX [digest(�]h"F�	��o�����9(�6W��\i), org.kframework.attributes.Location(Location(201,1,203,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax KItem ::= Bool
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  syntax Bool ::= "is#KVariable" "(" K ")" [function, predicate(#KVariable), total]
  syntax #KVariable [org.kframework.attributes.Location(Location(202,3,202,20)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module LANGUAGE-PARSING
  imports SINGLE-REWRITE-SYNTAX
  imports SINGLE-REWRITE
  imports K-TERM
  imports ID-SYNTAX-PROGRAM-PARSING
endmodule


module LIST [digest(=/�@މ8��E0g�ʗ;�WZQ�#.���	ܜ�), org.kframework.attributes.Location(Location(719,1,834,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports INT-SYNTAX
  imports BASIC-K
  syntax associativity left _List_
  syntax List [hook(LIST.List), org.kframework.attributes.Location(Location(723,3,723,32)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax List ::= List List [assoc, element(ListItem), format(%1%n%2), function, hook(LIST.concat), klabel(_List_), left, smtlib(smt_seq_concat), symbol, total, unit(.List)]
  syntax List ::= List "[" Int "<-" KItem "]" [function, hook(LIST.update), klabel(List:set)]
  syntax List ::= "updateList" "(" List "," Int "," List ")" [function, hook(LIST.updateAll), klabel(updateList)]
  syntax List ::= "range" "(" List "," Int "," Int ")" [function, hook(LIST.range), klabel(List:range), symbol]
  syntax List ::= "project:List" "(" K ")" [function, projection]
  syntax List ::= "makeList" "(" Int "," KItem ")" [function, hook(LIST.make), klabel(makeList)]
  syntax List ::= "fillList" "(" List "," Int "," Int "," KItem ")" [function, hook(LIST.fill), klabel(fillList)]
  syntax List ::= "ListItem" "(" KItem ")" [function, hook(LIST.element), klabel(ListItem), smtlib(smt_seq_elem), symbol, total]
  syntax List ::= ".List" [function, hook(LIST.unit), klabel(.List), latex(\dotCt{List}), smtlib(smt_seq_nil), symbol, total]
  syntax KItem ::= List "[" Int "]" [function, hook(LIST.get), klabel(List:get), symbol]
  syntax KItem ::= List
  syntax K
  syntax Int ::= "size" "(" List ")" [function, hook(LIST.size), klabel(sizeList), smtlib(smt_seq_len), total]
  syntax Bool ::= KItem "in" List [function, hook(LIST.in), klabel(_inList_), total]
  syntax Bool ::= "isList" "(" K ")" [function, predicate(List), total]
  rule `project:List`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module MAP [digest($��Iׂϩ[P��`��`�0��0J<��), org.kframework.attributes.Location(Location(212,1,404,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports SET
  imports LIST
  imports INT-SYNTAX
  imports BOOL-SYNTAX
  syntax priority _|->_ > .Map _Map_
  syntax associativity non-assoc _|->_ [org.kframework.attributes.Location(Location(260,3,260,25)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax associativity left _Map_
  syntax Set ::= "keys" "(" Map ")" [function, hook(MAP.keys), klabel(keys), total]
  syntax Map [hook(MAP.Map), org.kframework.attributes.Location(Location(218,3,218,29)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax Map ::= Map Map [assoc, comm, element(_|->_), format(%1%n%2), function, hook(MAP.concat), index(0), klabel(_Map_), left, symbol, unit(.Map)]
  syntax Map ::= Map "[" KItem "<-" KItem "]" [function, hook(MAP.update), klabel(Map:update), prefer, symbol, total]
  syntax Map ::= Map "[" KItem "<-" "undef" "]" [function, hook(MAP.remove), klabel(_[_<-undef]), symbol, total]
  syntax Map ::= Map "-Map" Map [function, hook(MAP.difference), latex({#1}-_{\it Map}{#2}), total]
  syntax Map ::= KItem "|->" KItem [function, hook(MAP.element), injective, klabel(_|->_), latex({#1}\mapsto{#2}), symbol, total]
  syntax Map ::= "updateMap" "(" Map "," Map ")" [function, hook(MAP.updateAll), klabel(updateMap), total]
  syntax Map ::= "removeAll" "(" Map "," Set ")" [function, hook(MAP.removeAll), klabel(removeAll), total]
  syntax Map ::= "project:Map" "(" K ")" [function, projection]
  syntax Map ::= ".Map" [function, hook(MAP.unit), klabel(.Map), latex(\dotCt{Map}), symbol, total]
  syntax List ::= "values" "(" Map ")" [function, hook(MAP.values), klabel(values)]
  syntax List ::= "keys_list" "(" Map ")" [function, hook(MAP.keys_list)]
  syntax KItem ::= Map "[" KItem "]" [function, hook(MAP.lookup), klabel(Map:lookup), symbol]
  syntax KItem ::= Map "[" KItem "]" "orDefault" KItem [function, hook(MAP.lookupOrDefault), klabel(Map:lookupOrDefault), total]
  syntax KItem ::= Map
  syntax KItem ::= "choice" "(" Map ")" [function, hook(MAP.choice), klabel(Map:choice)]
  syntax K
  syntax Int ::= "size" "(" Map ")" [function, hook(MAP.size), klabel(sizeMap), total]
  syntax Bool ::= Map "<=Map" Map [function, hook(MAP.inclusion), total]
  syntax Bool ::= KItem "in_keys" "(" Map ")" [function, hook(MAP.in_keys), total]
  syntax Bool ::= "isMap" "(" K ")" [function, predicate(Map), total]
  rule `project:Map`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module MINT-SYNTAX [digest(�Hf�3��BRֲ�E@r���e�֛�x�戸), org.kframework.attributes.Location(Location(2770,1,2777,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax {Width} MInt{Width} ::= r"[\\+-]?[0-9]+[pP][0-9]+" [hook(MINT.literal), prec(2), token]
  syntax MInt{Width} [hook(MINT.MInt), org.kframework.attributes.Location(Location(2773,3,2773,47)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
endmodule


module ML-SYNTAX [digest(�2��T���
G$z-A��]����^x,M�z'YG[~), not-lr1, org.kframework.attributes.Location(Location(138,1,165,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-K
  syntax {Sort} Sort ::= Sort "#Or" Sort [assoc, comm, format(%i%1%d%n%2%n%i%3%d), klabel(#Or), left, mlOp, symbol, unit(#Bottom)]
  syntax {Sort} Sort ::= Sort "#Implies" Sort [format(%i%1%d%n%2%n%i%3%d), klabel(#Implies), mlImplies, mlOp, symbol]
  syntax {Sort} Sort ::= Sort "#And" Sort [assoc, comm, format(%i%1%d%n%2%n%i%3%d), klabel(#And), left, mlAnd, mlOp, symbol, unit(#Top)]
  syntax {Sort} Sort ::= "#wEF" "(" Sort ")" [klabel(weakExistsFinally), mlOp, symbol]
  syntax {Sort} Sort ::= "#wAF" "(" Sort ")" [klabel(weakAlwaysFinally), mlOp, symbol]
  syntax {Sort} Sort ::= "#True" [klabel(#Top), mlUnary, symbol, unparseAvoid]
  syntax {Sort} Sort ::= "#Top" [klabel(#Top), mlUnary, symbol]
  syntax {Sort} Sort ::= "#Not" "(" Sort ")" [klabel(#Not), mlOp, mlUnary, symbol]
  syntax {Sort} Sort ::= "#False" [klabel(#Bottom), mlUnary, symbol, unparseAvoid]
  syntax {Sort} Sort ::= "#Bottom" [klabel(#Bottom), mlUnary, symbol]
  syntax {Sort} Sort ::= "#AG" "(" Sort ")" [klabel(#AG), mlOp, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "{" Sort1 "#Equals" Sort1 "}" [comm, format(%1%i%n%2%d%n%3%i%n%4%d%n%5), klabel(#Equals), mlEquals, mlOp, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Forall" Sort1 "." Sort2 [klabel(#Forall), mlBinder, mlOp, mlQuantifier, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Floor" "(" Sort1 ")" [klabel(#Floor), mlOp, mlUnary, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Exists" Sort1 "." Sort2 [klabel(#Exists), mlBinder, mlOp, mlQuantifier, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Ceil" "(" Sort1 ")" [klabel(#Ceil), mlOp, mlUnary, symbol]
  syntax priority #Top #Floor #Ceil #Not #Bottom > #Equals > #And
  syntax priority #Implies > #Exists #Forall
  syntax priority #And > #Or > #Implies
  syntax associativity left #Or
  syntax associativity left #And
  syntax K
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
endmodule


module PROGRAM-LISTS [digest(�8�#u7(�:�52�����@�:��zT�%�'�), org.kframework.attributes.Location(Location(408,1,420,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-K
  syntax K
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
endmodule


module RECORD-PRODUCTIONS [digest(��1���A�_��9�[Y�*&^��|��M), org.kframework.attributes.Location(Location(429,1,434,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
endmodule


module REQUIRES-ENSURES [digest(Q,��r��X�{J��_uX�Q3(���~BF), org.kframework.attributes.Location(Location(346,1,357,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports BASIC-K
  syntax K
  syntax Bool ::= "is#RuleContent" "(" K ")" [function, predicate(#RuleContent), total]
  syntax Bool ::= "is#RuleBody" "(" K ")" [function, predicate(#RuleBody), total]
  syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]
  syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]
  syntax #RuleContent ::= #RuleBody "when" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol]
  syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]
  syntax #RuleContent ::= #RuleBody "requires" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol]
  syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]
  syntax #RuleBody ::= K
endmodule


module RULE-CELLS [digest(�(1��U������,�݄\�w��6d.�), org.kframework.attributes.Location(Location(275,1,296,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports RULE-LISTS
  imports KCELLS
  syntax KItem ::= Int
  syntax KItem ::= GeneratedCounterCell
  syntax K
  syntax Int [org.kframework.attributes.Location(Location(286,3,286,13)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax Int ::= "project:Int" "(" K ")" [function, projection]
  syntax GeneratedCounterCell ::= "project:GeneratedCounterCell" "(" K ")" [function, projection]
  syntax GeneratedCounterCell ::= "<generatedCounter>" Int "</generatedCounter>" [cell, internal, klabel(<generatedCounter>), symbol]
  syntax Bool ::= "isInt" "(" K ")" [function, predicate(Int), total]
  syntax Bool ::= "isGeneratedCounterCell" "(" K ")" [function, predicate(GeneratedCounterCell), total]
  syntax Bool ::= "is#OptionalDots" "(" K ")" [function, predicate(#OptionalDots), total]
  syntax #OptionalDots ::= "..." [klabel(#dots), symbol]
  syntax #OptionalDots ::= "" [klabel(#noDots), symbol]
  rule `project:Int`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:GeneratedCounterCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module RULE-LISTS [digest("�'���ear���2�À���]�T�B�uh�), org.kframework.attributes.Location(Location(422,1,427,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
endmodule


module RULE-TAG-SYNTAX [digest(6<���i�O��s}l��P���`���D.), org.kframework.attributes.Location(Location(2981,1,2985,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports BUILTIN-ID-TOKENS
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  syntax Bool ::= "is#RuleTag" "(" K ")" [function, predicate(#RuleTag), total]
  syntax #RuleTag ::= #LowerId [token]
endmodule


module SET [digest(�|�Js�r�y��!2�ؾ�<宅��:��), org.kframework.attributes.Location(Location(506,1,618,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports INT-SYNTAX
  imports BASIC-K
  syntax associativity left _|Set__SET_Set_Set_Set
  syntax associativity left _Set_
  syntax Set [hook(SET.Set), org.kframework.attributes.Location(Location(510,3,510,29)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax Set ::= Set Set [assoc, comm, element(SetItem), format(%1%n%2), function, hook(SET.concat), idem, klabel(_Set_), left, symbol, unit(.Set)]
  syntax Set ::= Set "|Set" Set [comm, function, hook(SET.union), left, total]
  syntax Set ::= Set "-Set" Set [function, hook(SET.difference), klabel(Set:difference), latex({#1}-_{\it Set}{#2}), symbol, total]
  syntax Set ::= "project:Set" "(" K ")" [function, projection]
  syntax Set ::= "intersectSet" "(" Set "," Set ")" [comm, function, hook(SET.intersection), klabel(intersectSet), total]
  syntax Set ::= "SetItem" "(" KItem ")" [function, hook(SET.element), injective, klabel(SetItem), symbol, total]
  syntax Set ::= ".Set" [function, hook(SET.unit), klabel(.Set), latex(\dotCt{Set}), symbol, total]
  syntax KItem ::= Set
  syntax KItem ::= "choice" "(" Set ")" [function, hook(SET.choice), klabel(Set:choice)]
  syntax K
  syntax Int ::= "size" "(" Set ")" [function, hook(SET.size), klabel(size), total]
  syntax Bool ::= Set "<=Set" Set [function, hook(SET.inclusion), total]
  syntax Bool ::= KItem "in" Set [function, hook(SET.in), klabel(Set:in), symbol, total]
  syntax Bool ::= "isSet" "(" K ")" [function, predicate(Set), total]
  rule `project:Set`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), concrete, org.kframework.attributes.Location(Location(559,8,559,45)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module SINGLE-REWRITE [digest(��/���lNT͐�����)
�hB�k�\p��m), org.kframework.attributes.Location(Location(7,1,13,10)), org.kframework.attributes.Source(Source(/home/ja/dev/proof-checker/generation/k-benchmarks/single-rewrite/single-rewrite.k))]
  imports SINGLE-REWRITE-SYNTAX
  imports DEFAULT-CONFIGURATION
  syntax KItem ::= KCellOpt
  syntax KItem ::= GeneratedTopCellFragment
  syntax KItem ::= GeneratedTopCell
  syntax KItem ::= GeneratedCounterCellOpt
  syntax KItem ::= GeneratedCounterCell
  syntax KCellOpt ::= KCell
  syntax KCellOpt ::= "project:KCellOpt" "(" K ")" [function, projection]
  syntax KCellOpt ::= "noKCell" [cellOptAbsent(KCell)]
  syntax K
  syntax GeneratedTopCellFragment ::= "project:GeneratedTopCellFragment" "(" K ")" [function, projection]
  syntax GeneratedTopCellFragment ::= "<generatedTop>-fragment" KCellOpt GeneratedCounterCellOpt "</generatedTop>-fragment" [cellFragment(GeneratedTopCell)]
  syntax GeneratedTopCell ::= "project:GeneratedTopCell" "(" K ")" [function, projection]
  syntax GeneratedTopCell ::= "initGeneratedTopCell" "(" Map ")" [function, initializer, noThread]
  syntax GeneratedTopCell ::= "<generatedTop>" KCell GeneratedCounterCell "</generatedTop>" [cell, cellName(generatedTop), format(%2), topcell]
  syntax GeneratedCounterCellOpt ::= GeneratedCounterCell
  syntax GeneratedCounterCellOpt ::= "project:GeneratedCounterCellOpt" "(" K ")" [function, projection]
  syntax GeneratedCounterCellOpt ::= "noGeneratedCounterCell" [cellOptAbsent(GeneratedCounterCell)]
  syntax GeneratedCounterCell ::= "project:GeneratedCounterCell" "(" K ")" [function, projection]
  syntax GeneratedCounterCell ::= "initGeneratedCounterCell" [function, initializer, noThread]
  syntax GeneratedCounterCell ::= "getGeneratedCounterCell" "(" GeneratedTopCell ")" [function]
  syntax GeneratedCounterCell ::= "<generatedCounter>" Int "</generatedCounter>" [cell, cellName(generatedCounter), format(%1%i%n%2%d%n%3)]
  syntax Bool ::= "isKCellOpt" "(" K ")" [function, predicate(KCellOpt), total]
  syntax Bool ::= "isGeneratedTopCellFragment" "(" K ")" [function, predicate(GeneratedTopCellFragment), total]
  syntax Bool ::= "isGeneratedTopCell" "(" K ")" [function, predicate(GeneratedTopCell), total]
  syntax Bool ::= "isGeneratedCounterCellOpt" "(" K ")" [function, predicate(GeneratedCounterCellOpt), total]
  syntax Bool ::= "isGeneratedCounterCell" "(" K ")" [function, predicate(GeneratedCounterCell), total]
  rule initGeneratedTopCell(Init)=>`<generatedTop>`(initKCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") 
  rule `project:KCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:GeneratedTopCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:GeneratedTopCellFragment`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:GeneratedCounterCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:GeneratedCounterCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `<generatedTop>`(`<k>`(`` `FooA()_SINGLE-REWRITE-SYNTAX_Foo`(.KList)=>`FooB()_SINGLE-REWRITE-SYNTAX_Foo`(.KList)``~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7090acbab15a0fbe5feff18ac2cd925c09a1cdac7e856517a397798f346a3d9e), org.kframework.attributes.Location(Location(11,8,11,24)), org.kframework.attributes.Source(Source(/home/ja/dev/proof-checker/generation/k-benchmarks/single-rewrite/single-rewrite.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module SINGLE-REWRITE-SYNTAX [digest(~{���.K�#:�q�z�8��g|�;��:F), org.kframework.attributes.Location(Location(1,1,5,10)), org.kframework.attributes.Source(Source(/home/ja/dev/proof-checker/generation/k-benchmarks/single-rewrite/single-rewrite.k))]
  syntax KItem ::= Foo
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Foo ::= "project:Foo" "(" K ")" [function, projection]
  syntax Foo ::= "FooB" "(" ")" [klabel(FooB)]
  syntax Foo ::= "FooA" "(" ")" [klabel(FooA)]
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isFoo" "(" K ")" [function, predicate(Foo), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Foo`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module SORT-BOOL [digest(0�P�p�f��U�U��&6U��ǐ�G ��k����\), org.kframework.attributes.Location(Location(877,1,879,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Bool [hook(BOOL.Bool), org.kframework.attributes.Location(Location(878,3,878,32)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module SORT-K [digest(rL�@:�[���Z�^���q59�,t�:e�), org.kframework.attributes.Location(Location(26,1,28,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax KItem ::= Bool
  syntax K [hook(K.K), org.kframework.attributes.Location(Location(27,3,27,23)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module SORT-KBOTT [digest(���FN�"Rѳ9i��DCk=mNP��K	JJ��), org.kframework.attributes.Location(Location(68,1,71,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  imports SORT-K
  syntax KBott [org.kframework.attributes.Location(Location(70,3,70,15)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
  syntax K
  syntax Bool ::= "isKBott" "(" K ")" [function, predicate(KBott), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
endmodule


module SORT-PREDICATES [digest(jei���{���e��Kh���ǘ�i"&9�iZ), org.kframework.attributes.Location(Location(436,1,441,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/kast.md))]
endmodule


module STDIN-STREAM [digest(q���̷	����àp{�Z}�y=Bݩt�#�), org.kframework.attributes.Location(Location(2599,1,2681,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
endmodule


module STDOUT-STREAM [digest(_Tl�I��+�:���U`�u�Gw�qSڈ�t�), org.kframework.attributes.Location(Location(2683,1,2751,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
endmodule


module STRING [digest(�?�S��y:3�zA#��5w	/Hh ���S�x�), org.kframework.attributes.Location(Location(1730,1,1734,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports STRING-COMMON
endmodule


module STRING-COMMON [digest(��}��!3	.d�c���%~��pV0F�NF,{�), org.kframework.attributes.Location(Location(1508,1,1712,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  imports STRING-SYNTAX
  imports K-EQUAL
  imports INT
  imports FLOAT-SYNTAX
  imports BOOL
  syntax associativity left _==String__STRING-COMMON_Bool_String_String
  syntax associativity left _=/=String__STRING-COMMON_Bool_String_String
  syntax associativity left _+String__STRING-COMMON_String_String_String
  syntax String ::= String "+String" String [function, hook(STRING.concat), latex({#1}+_{\scriptstyle\it String}{#2}), left, total]
  syntax String ::= "substrString" "(" String "," Int "," Int ")" [function, hook(STRING.substr), klabel(substrString), total]
  syntax String ::= "replaceFirst" "(" String "," String "," String ")" [function, hook(STRING.replaceFirst), total]
  syntax String ::= "replaceAll" "(" String "," String "," String ")" [function, hook(STRING.replaceAll), total]
  syntax String ::= "replace" "(" String "," String "," String "," Int ")" [function, hook(STRING.replace)]
  syntax String ::= "newUUID" [function, hook(STRING.uuid), impure]
  syntax String ::= "directionalityChar" "(" String ")" [function, hook(STRING.directionality), klabel(directionalityChar)]
  syntax String ::= "chrChar" "(" Int ")" [function, hook(STRING.chr), klabel(chrChar)]
  syntax String ::= "categoryChar" "(" String ")" [function, hook(STRING.category), klabel(categoryChar)]
  syntax String ::= "Int2String" "(" Int ")" [function, hook(STRING.int2string), klabel(Int2String), total]
  syntax String ::= "Float2String" "(" Float "," String ")" [function, hook(STRING.floatFormat), klabel(FloatFormat)]
  syntax String ::= "Float2String" "(" Float ")" [function, hook(STRING.float2string), klabel(Float2String), total]
  syntax String ::= "Bool2String" "(" Bool ")" [function, klabel(Bool2String), total]
  syntax String ::= "Base2String" "(" Int "," Int ")" [function, hook(STRING.base2string), klabel(Base2String)]
  syntax Int ::= "rfindString" "(" String "," String "," Int ")" [function, hook(STRING.rfind), klabel(rfindString)]
  syntax Int ::= "rfindChar" "(" String "," String "," Int ")" [function, hook(STRING.rfindChar), klabel(rfindChar)]
  syntax Int ::= "ordChar" "(" String ")" [function, hook(STRING.ord), klabel(ordChar)]
  syntax Int ::= "lengthString" "(" String ")" [function, hook(STRING.length), klabel(lengthString), total]
  syntax Int ::= "findString" "(" String "," String "," Int ")" [function, hook(STRING.find), klabel(findString)]
  syntax Int ::= "findChar" "(" String "," String "," Int ")" [function, hook(STRING.findChar), klabel(findChar)]
  syntax Int ::= "countAllOccurrences" "(" String "," String ")" [function, hook(STRING.countAllOccurrences), total]
  syntax Int ::= "String2Int" "(" String ")" [function, hook(STRING.string2int), klabel(String2Int)]
  syntax Int ::= "String2Base" "(" String "," Int ")" [function, hook(STRING.string2base), klabel(String2Base)]
  syntax Float ::= "String2Float" "(" String ")" [function, hook(STRING.string2float), klabel(String2Float)]
  syntax Bool ::= String ">String" String [function, hook(STRING.gt), total]
  syntax Bool ::= String ">=String" String [function, hook(STRING.ge), total]
  syntax Bool ::= String "==String" String [function, hook(STRING.eq), left, total]
  syntax Bool ::= String "=/=String" String [function, hook(STRING.ne), left, total]
  syntax Bool ::= String "<String" String [function, hook(STRING.lt), total]
  syntax Bool ::= String "<=String" String [function, hook(STRING.le), total]
  syntax Bool ::= "String2Bool" "(" String ")" [function, klabel(String2Bool)]
  rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1691,8,1691,33)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1690,8,1690,182)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_Gen0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1701,8,1702,57)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1698,8,1700,66)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1710,8,1710,154)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_Gen0,_Gen1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), org.kframework.attributes.Location(Location(1709,8,1709,49)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), org.kframework.attributes.Location(Location(1705,8,1708,30)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1689,8,1689,32)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), org.kframework.attributes.Location(Location(1688,8,1688,431)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1695,8,1696,60)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1693,8,1694,59)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1685,8,1685,52)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1686,8,1686,63)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1664,8,1664,65)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1684,8,1684,63)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1590,8,1590,36)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1591,8,1591,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1584,8,1584,36)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1585,8,1585,37)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module STRING-SYNTAX [digest(��/��zMʑ�+�~Ӟ����XY�ڏ��L), org.kframework.attributes.Location(Location(1503,1,1506,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax String [hook(STRING.String), org.kframework.attributes.Location(Location(1504,3,1504,38)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token]
  syntax String ::= "project:String" "(" K ")" [function, projection]
  syntax KItem ::= String
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isString" "(" K ")" [function, predicate(String), total]
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:String`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule


module UNSIGNED-INT-SYNTAX [digest(M�}A��ɼ!��s�A-��(eS�}��Aȋ9), org.kframework.attributes.Location(Location(998,1,1001,10)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax KItem ::= Int
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function, projection]
  syntax K ::= "project:K" "(" K ")" [function, projection]
  syntax K
  syntax Int [hook(INT.Int), org.kframework.attributes.Location(Location(999,3,999,29)), org.kframework.attributes.Source(Source(/home/ja/dev/k/k-distribution/target/release/k/include/kframework/builtin/domains.md))]
  syntax Int ::= r"[0-9]+" [prec(2), prefer, token]
  syntax Int ::= "project:Int" "(" K ")" [function, projection]
  syntax Bool ::= "project:Bool" "(" K ")" [function, projection]
  syntax Bool ::= "isKItem" "(" K ")" [function, predicate(KItem), total]
  syntax Bool ::= "isK" "(" K ")" [function, predicate(K), total]
  syntax Bool ::= "isInt" "(" K ")" [function, predicate(Int), total]
  syntax Bool ::= "isBool" "(" K ")" [function, predicate(Bool), total]
  rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Int`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
endmodule