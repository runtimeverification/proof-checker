Function: Lblexp'LParUndsRParUnds'LET-SYNTAX'Unds'Int'Unds'Int{} @ 0
  Term: [kore]
Rule 152 [label: LET.exp-rl] [loc: 15,5] [substs: 1]
  VarX = [kore]
Function: Lbl'Hash'lambda'UndsUnds'{} @ 0
  Hook: INT.mul @ 0:0
    Function: Lbl'UndsStar'Int'Unds'{} @ 0:0
      Term: [kore]
      Term: [kore]
    Result: [kore]
  Term: [kore]
  Term: [kore]
Rule 119 [label: N/A] [loc: 16,7] [substs: 2]
  VarX = [kore]
  VarS = [kore]
Function: Lbl'Hash'lambda'UndsUnds'2{} @ 0
  Hook: INT.mul @ 0:0
    Function: Lbl'UndsStar'Int'Unds'{} @ 0:0
      Term: [kore]
      Term: [kore]
    Result: [kore]
  Term: [kore]
  Term: [kore]
Rule 120 [label: N/A] [loc: 17,7] [substs: 2]
  VarX = [kore]
  VarD = [kore]
Hook: INT.sub @ 0
  Function: Lbl'Unds'-Int'Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Hook: MAP.element @ 0
  Function: Lbl'UndsPipe'-'-GT-Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Hook: MAP.unit @ 0
  Function: Lbl'Stop'Map{} @ 0
  Result: [kore]
Hook: MAP.concat @ 0
  Function: Lbl'Unds'Map'Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Function: LblinitGeneratedTopCell{} @ 0
  Term: [kore]
Rule 156 [label: N/A] [loc: N/A] [substs: 1]
  VarInit = [kore]
Function: LblinitKCell{} @ 0:0
  Term: [kore]
Rule 157 [label: N/A] [loc: N/A] [substs: 1]
  VarInit = [kore]
Function: Lblproject'Coln'KItem{} @ 0:0:0
  Hook: MAP.lookup @ 0:0:0:0:0
    Function: LblMap'Coln'lookup{} @ 0:0:0:0:0
      Term: [kore]
      Term: [kore]
    Result: [kore]
  Term: [kore]
Rule 198 [label: N/A] [loc: N/A] [substs: 1]
  VarK = [kore]
Function: LblinitGeneratedCounterCell{} @ 0:1
Rule 155 [label: N/A] [loc: N/A] [substs: 0]
Init config: [kore]
