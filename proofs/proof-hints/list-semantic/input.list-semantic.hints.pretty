Hook: LIST.element @ 0
  Function: LblListItem{} @ 0
    Term: [kore]
  Result: [kore]
Hook: LIST.element @ 0
  Function: LblListItem{} @ 0
    Term: [kore]
  Result: [kore]
Hook: LIST.element @ 0
  Function: LblListItem{} @ 0
    Term: [kore]
  Result: [kore]
Hook: LIST.concat @ 0
  Function: Lbl'Unds'List'Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Hook: LIST.concat @ 0
  Function: Lbl'Unds'List'Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Function: Lbl'Hash'revOps'LParUndsRParUnds'LIST-SEMANTIC-SYNTAX'Unds'List'Unds'List{} @ 0
  Term: [kore]
Rule 95 [label: LIST-SEMANTIC.rev-rule] [loc: 16,21] [substs: 1]
  VarOPS = [kore]
Function: Lbl'Hash'revOpsAux'LParUndsCommUndsRParUnds'LIST-SEMANTIC-SYNTAX'Unds'List'Unds'List'Unds'List{} @ 0
  Term: [kore]
  Hook: LIST.unit @ 0:1
    Function: Lbl'Stop'List{} @ 0:1
    Result: [kore]
  Term: [kore]
Rule 97 [label: LIST-SEMANTIC.rev-aux-rec] [loc: 19,25] [substs: 3]
  VarOP = [kore]
  VarOPS = [kore]
  VarOPS'Apos' = [kore]
Function: Lbl'Hash'revOpsAux'LParUndsCommUndsRParUnds'LIST-SEMANTIC-SYNTAX'Unds'List'Unds'List'Unds'List{} @ 0
  Term: [kore]
  Hook: LIST.concat @ 0:1
    Function: Lbl'Unds'List'Unds'{} @ 0:1
      Hook: LIST.element @ 0:1:0
        Function: LblListItem{} @ 0:1:0
          Term: [kore]
        Result: [kore]
      Term: [kore]
      Term: [kore]
    Result: [kore]
  Term: [kore]
Rule 97 [label: LIST-SEMANTIC.rev-aux-rec] [loc: 19,25] [substs: 3]
  VarOP = [kore]
  VarOPS = [kore]
  VarOPS'Apos' = [kore]
Function: Lbl'Hash'revOpsAux'LParUndsCommUndsRParUnds'LIST-SEMANTIC-SYNTAX'Unds'List'Unds'List'Unds'List{} @ 0
  Term: [kore]
  Hook: LIST.concat @ 0:1
    Function: Lbl'Unds'List'Unds'{} @ 0:1
      Hook: LIST.element @ 0:1:0
        Function: LblListItem{} @ 0:1:0
          Term: [kore]
        Result: [kore]
      Term: [kore]
      Term: [kore]
    Result: [kore]
  Term: [kore]
Rule 97 [label: LIST-SEMANTIC.rev-aux-rec] [loc: 19,25] [substs: 3]
  VarOP = [kore]
  VarOPS = [kore]
  VarOPS'Apos' = [kore]
Function: Lbl'Hash'revOpsAux'LParUndsCommUndsRParUnds'LIST-SEMANTIC-SYNTAX'Unds'List'Unds'List'Unds'List{} @ 0
  Term: [kore]
  Hook: LIST.concat @ 0:1
    Function: Lbl'Unds'List'Unds'{} @ 0:1
      Hook: LIST.element @ 0:1:0
        Function: LblListItem{} @ 0:1:0
          Term: [kore]
        Result: [kore]
      Term: [kore]
      Term: [kore]
    Result: [kore]
  Term: [kore]
Rule 96 [label: LIST-SEMANTIC.rev-aux-base] [loc: 18,25] [substs: 1]
  VarOPS'Apos' = [kore]
Hook: MAP.element @ 0
  Function: Lbl'UndsPipe'-'-GT-Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Hook: MAP.unit @ 0
  Function: Lbl'Stop'Map{} @ 0
  Result: [kore]
Hook: MAP.concat @ 0
  Function: Lbl'Unds'Map'Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Function: LblinitGeneratedTopCell{} @ 0
  Term: [kore]
Rule 101 [label: N/A] [loc: N/A] [substs: 1]
  VarInit = [kore]
Function: LblinitKCell{} @ 0:0
  Term: [kore]
Rule 102 [label: N/A] [loc: N/A] [substs: 1]
  VarInit = [kore]
Function: Lblproject'Coln'KItem{} @ 0:0:0
  Hook: MAP.lookup @ 0:0:0:0:0
    Function: LblMap'Coln'lookup{} @ 0:0:0:0:0
      Term: [kore]
      Term: [kore]
    Result: [kore]
  Term: [kore]
Rule 141 [label: N/A] [loc: N/A] [substs: 1]
  VarK = [kore]
Function: LblinitGeneratedCounterCell{} @ 0:1
Rule 100 [label: N/A] [loc: N/A] [substs: 0]
Init config: [kore]
