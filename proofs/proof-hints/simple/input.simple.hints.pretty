Function: Lblf'LParUndsRParUnds'SIMPLE'Unds'Expr'Unds'Int{} @ 0
  Term: [kore]
Rule 2726 [label: SIMPLE.f1] [loc: 10,14] [substs: 1]
  Var'Unds'Gen0 = [kore]
Hook: MAP.element @ 0
  Function: Lbl'UndsPipe'-'-GT-Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Hook: MAP.unit @ 0
  Function: Lbl'Stop'Map{} @ 0
  Result: [kore]
Hook: MAP.concat @ 0
  Function: Lbl'Unds'Map'Unds'{} @ 0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Function: LblinitGeneratedTopCell{} @ 0
  Term: [kore]
Rule 2734 [label: ] [loc: ] [substs: 1]
  VarInit = [kore]
Function: LblinitPCell{} @ 0:0
  Term: [kore]
Rule 2735 [label: ] [loc: ] [substs: 1]
  VarInit = [kore]
Function: Lblproject'Coln'Expr{} @ 0:0
  Hook: MAP.lookup @ 0:0:0:0
    Function: LblMap'Coln'lookup{} @ 0:0:0:0
      Term: [kore]
      Term: [kore]
    Result: [kore]
  Term: [kore]
Rule 2789 [label: ] [loc: ] [substs: 1]
  VarK = [kore]
Function: LblinitGeneratedCounterCell{} @ 0:1
Rule 2733 [label: ] [loc: ] [substs: 0]
Init config: [kore]
Rule 2684 [label: SIMPLE.r1] [loc: 9,14] [substs: 2]
  Var'Unds'DotVar0 = [kore]
  Var'Unds'Gen2 = [kore]
Function: Lblg'LParUndsRParUnds'SIMPLE'Unds'Expr'Unds'Int{} @ 0:0:0
  Term: [kore]
Rule 2731 [label: SIMPLE.f2] [loc: 11,14] [substs: 1]
  VarI = [kore]
Hook: INT.add @ 0:0
  Function: Lbl'UndsPlus'Int'Unds'{} @ 0:0
    Term: [kore]
    Term: [kore]
  Result: [kore]
Config: [kore]
