MetaVar 0eFresh, len=1 x0 

	Stack:
	0: phi0
EVar 0
	Stack:
	0: phi0
	1: x0
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: phi0
MetaVar 1
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: phi0
MetaVar 1
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: phi0
	5: phi1
Implies
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
MetaVar 1
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: phi1
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: phi1
	6: phi0
Implies
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: phi0
MetaVar 1
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: phi0
	7: phi1
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: phi0
	7: phi1
	8: phi0
SVar 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: phi0
	7: phi1
	8: phi0
	9: X0
Mu 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: phi0
	7: phi1
	8: phi0
	9: (μ X0 . X0)
Instantiate 
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: phi0
	7: phi1
	8: phi0
	9: ⊥
Implies
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: phi0
	7: phi1
	8: (phi0 -> ⊥)
Instantiate 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: phi0
	7: ¬phi1
Implies
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: (phi0 -> ¬phi1)
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: (phi0 -> ¬phi1)
	7: phi0
SVar 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: (phi0 -> ¬phi1)
	7: phi0
	8: X0
Mu 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: (phi0 -> ¬phi1)
	7: phi0
	8: (μ X0 . X0)
Instantiate 
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: (phi0 -> ¬phi1)
	7: phi0
	8: ⊥
Implies
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: (phi0 -> ¬phi1)
	7: (phi0 -> ⊥)
Instantiate 0
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: (phi0 -> phi1)
	5: (phi1 -> phi0)
	6: ¬(phi0 -> ¬phi1)
Instantiate 0, 1
	Stack:
	0: phi0
	1: x0
	2: phi0
	3: phi1
	4: ((phi0 -> phi1) ⋀ (phi1 -> phi0))
Instantiate 0, 1
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: phi0
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: phi0
	4: phi0
SVar 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: phi0
	4: phi0
	5: X0
Mu 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: phi0
	4: phi0
	5: (μ X0 . X0)
Instantiate 
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: phi0
	4: phi0
	5: ⊥
Implies
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: phi0
	4: (phi0 -> ⊥)
Instantiate 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: ¬phi0
Symbol ⌈_⌉
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: ¬phi0
	4: ⌈_⌉
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: ¬phi0
	4: ⌈_⌉
	5: phi0
App
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: ¬phi0
	4: (⌈_⌉ · phi0)
Instantiate 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: (⌈_⌉ · phi0)[{0: '¬phi0'}]
MetaVar 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: (⌈_⌉ · phi0)[{0: '¬phi0'}]
	4: phi0
SVar 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: (⌈_⌉ · phi0)[{0: '¬phi0'}]
	4: phi0
	5: X0
Mu 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: (⌈_⌉ · phi0)[{0: '¬phi0'}]
	4: phi0
	5: (μ X0 . X0)
Instantiate 
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: (⌈_⌉ · phi0)[{0: '¬phi0'}]
	4: phi0
	5: ⊥
Implies
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: (⌈_⌉ · phi0)[{0: '¬phi0'}]
	4: (phi0 -> ⊥)
Instantiate 0
	Stack:
	0: phi0
	1: x0
	2: (0 <-> 1)
	3: ¬(⌈_⌉ · phi0)[{0: '¬phi0'}]
Instantiate 0
	Stack:
	0: phi0
	1: x0
	2: (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(0 <-> 1)'}]
Instantiate 0, 1
	Stack:
	0: (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}]
Exists 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
MetaVar 1
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
MetaVar 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: phi0
MetaVar 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: phi0
	3: phi0
SVar 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: phi0
	3: phi0
	4: X0
Mu 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: phi0
	3: phi0
	4: (μ X0 . X0)
Instantiate 
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: phi0
	3: phi0
	4: ⊥
Implies
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: phi0
	3: (phi0 -> ⊥)
Instantiate 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: ¬phi0
Exists 1
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: (∃ x1 . ¬phi0)
MetaVar 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: (∃ x1 . ¬phi0)
	3: phi0
SVar 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: (∃ x1 . ¬phi0)
	3: phi0
	4: X0
Mu 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: (∃ x1 . ¬phi0)
	3: phi0
	4: (μ X0 . X0)
Instantiate 
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: (∃ x1 . ¬phi0)
	3: phi0
	4: ⊥
Implies
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: (∃ x1 . ¬phi0)
	3: (phi0 -> ⊥)
Instantiate 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: phi1
	2: ¬(∃ x1 . ¬phi0)
Instantiate 0
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: (phi0 -> (μ X0 . X0)[{}])[{0: "(∃ x1 . (phi0 -> (μ X0 . X0)[{}])[{0: 'phi0'}])"}][{0: 'phi1'}]
MetaVar 0eFresh, len=1 x0 

	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: (phi0 -> (μ X0 . X0)[{}])[{0: "(∃ x1 . (phi0 -> (μ X0 . X0)[{}])[{0: 'phi0'}])"}][{0: 'phi1'}]
	2: phi0
MetaVar 1
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: (phi0 -> (μ X0 . X0)[{}])[{0: "(∃ x1 . (phi0 -> (μ X0 . X0)[{}])[{0: 'phi0'}])"}][{0: 'phi1'}]
	2: phi0
	3: phi1
ESubst id=1
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: (phi0 -> (μ X0 . X0)[{}])[{0: "(∃ x1 . (phi0 -> (μ X0 . X0)[{}])[{0: 'phi0'}])"}][{0: 'phi1'}]
	2: phi1[phi0/x1]
Implies
	Stack:
	0: (∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}])
	1: ((phi0 -> (μ X0 . X0)[{}])[{0: "(∃ x1 . (phi0 -> (μ X0 . X0)[{}])[{0: 'phi0'}])"}][{0: 'phi1'}] -> phi1[phi0/x1])
Implies
	Stack:
	0: ((∃ x0 . (phi0 -> (μ X0 . X0)[{}])[{0: '(⌈_⌉ · phi0)[{0: "(phi0 -> (μ X0 . X0)[{}])[{0: \'phi0\'}]"}]'}][{0: '(phi0 -> (μ X0 . X0)[{}])[{0: "(phi0 -> (phi0 -> (μ X0 . X0)[{}])[{0: \'phi1\'}])"}][{0: \'(phi0 -> phi1)\', 1: \'(phi1 -> phi0)\'}][{0: \'phi0\', 1: \'phi1\'}]'}][{0: 'phi0', 1: 'x0'}]) -> ((phi0 -> (μ X0 . X0)[{}])[{0: "(∃ x1 . (phi0 -> (μ X0 . X0)[{}])[{0: 'phi0'}])"}][{0: 'phi1'}] -> phi1[phi0/x1]))
Publish
